plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.github'
version = '0.0.1-SNAPSHOT'
java {
    sourceCompatibility = '21'
}
repositories {
    mavenCentral()
}
ext {
    set('springCloudVersion', "2023.0.0")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

springBoot {
    mainClass = 'com.github.BatchModuleV2Application'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //Batch
    implementation 'org.springframework.boot:spring-boot-starter-batch'

    //MyBatis
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'

    //Actuator, Prometheus
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // Spring Data R2DBC
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc:3.2.5'

    // R2DBC MySQL Driver
    implementation 'io.asyncer:r2dbc-mysql:1.1.0'

    // R2DBC Pool
    implementation 'io.r2dbc:r2dbc-pool:1.0.1.RELEASE'
}

tasks.named('test') {
    useJUnitPlatform()
}
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs += ['-parameters']
    // enable-preview정식버전 포함 전의 java 실험적 기능들 프리뷰로 쓸 수 있도록
}