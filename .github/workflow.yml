name: billing_project

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        modules: [api_module, user_module, video_module, advertisement_module]

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      ## create application.properties
      - name: make application.properties
        run: |
          cd ./src/main/resources
          touch ./application.properties
          echo "${{ secrets.PROPERTIES }}" >> ./application.properties
        shell: bash

      # 각 모듈에 대한 작업을 병렬로 실행
      - name: Build and push Docker images
        run: |
          cd ${{ matrix.modules }}
          ./gradlew bootJar
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ matrix.modules }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ matrix.modules }}

      # 각 모듈에 대해 Docker Compose 실행
      - name: Execute Docker Compose
        run: |
          sudo docker rm -f $(docker ps -qa)
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ matrix.modules }}
          ssh -i ${{ secrets.KEY }} ubuntu@${{ secrets["${{ matrix.modules^^ }}_HOST"] }} 'bash -s' << EOF
            docker-compose -f docker-compose-${{ matrix.modules }}.yml up -d
            docker image prune -f
          EOF

